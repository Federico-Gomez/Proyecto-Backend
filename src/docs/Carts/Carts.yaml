paths:
  /api/carts/:
    post:
      summary: crea un nuevo cart
      tags:
      - Carts
      security:
        - CookieAuth: []
      responses:
        "201":
          description: 'Operación de creación de cart exitosa'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Cart'

        '500':
          description: 'Error creando cart'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/carts/{cid}:
    get:
      summary: devuelve un cart por su id
      tags:
      - Carts
      security:
        - CookieAuth: []
      parameters:
        - name: cid
          in: path
          required: true
          description: id del cart que se desea obtener
          schema:
            type: string
      responses:
        "200":
          description: 'Cart obtenido exitosamente'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Cart'
        "404":
          description: Cart no encontrado en la base de datos
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Error'
        "500":
          description: 'Error obteniendo cart'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Error'
      
    put:
      summary: Actualiza un cart por su id
      tags: 
      - Carts
      security:
        - CookieAuth: []
      parameters:
        - name: cid
          in: path
          required: true
          description: id del cart que se desea actualizar
          schema:
            type: string

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#components/requestBodies/CartUpdate'

      responses:
        '200':
          description: Cart updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '500':
          description: Error updating cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Elimina un cart por su id
      tags: 
      - Carts
      security:
        - CookieAuth: []
      parameters:
        - name: cid
          in: path
          required: true
          description: id del cart que se desea eliminar
          schema:
            type: string
      responses:
        "200":
          description: 'Operación de eliminación de cart exitosa'
          content:
            application/json:
              schema:
                type: object
                $ref: '#components/schemas/Success'

        '500':
          description: Error eliminando cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /api/carts/{cid}/products/{pid}:
    post:
      summary: Agrega un producto con id espcificado a un cart con id especificada
      tags:
      - Carts
      security:
        - CookieAuth: []
      parameters:
        - name: cid
          in: path
          required: true
          description: id del cart al que se desea agregar el producto
          schema:
            type: string
        - name: pid
          in: path
          required: true
          description: id del producto que se desea agregar
          schema:
            type: string

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#components/requestBodies/ProductAdd'

      responses:
        '201':
          description: Producto agregado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '500':
          description: Error agregando producto al cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Actualiza un producto con id espcificado en un cart con id especificado
      tags:
      - Carts
      security:
        - CookieAuth: []
      parameters:
        - name: cid
          in: path
          required: true
          description: id del cart en el que se desea actualizar el producto
          schema:
            type: string
        - name: pid
          in: path
          required: true
          description: id del producto que se desea actualizar
          schema:
            type: string

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#components/requestBodies/ProductUpdateQuantity'

      responses:
        '200':
          description: producto actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '500':
          description: Error actualizando producto en el cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      
    delete:
      summary: Elimina un producto con id espcificado de un cart con id especificado
      tags:
      - Carts
      security:
        - CookieAuth: []
      parameters:
        - name: cid
          in: path
          required: true
          description: id del cart en el que se desea eliminar el producto
          schema:
            type: string
        - name: pid
          in: path
          required: true
          description: id del producto que se desea eliminar
          schema:
            type: string
      
      responses:
        '200':
          description: Producto eliminado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '500':
          description: Error eliminando producto del cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /api/carts/{cid}/purchase:
    post:
      summary: Realiza la compra de un cart con id espcificado y emite un ticket
      tags:
      - Carts
      security:
        - CookieAuth: []
      parameters:
        - name: cid
          in: path
          required: true
          description: id del cart en el que se desea eliminar el producto
          schema:
            type: string

      responses:
        '200':
          description: Cart comprado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        '500':
          description: Error comprando el cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Cart:
      type: object
      properties:
        _id:
          type: string
          description: id del cart, autogenerado por Mongo
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductInCart'
          description: array con el ID y cantidad de los productos agregados al cart
      example:
        _id: "6684270efca4696c3dc69275"
        products: [
          {
          _id: "661945da63af7211c9f442d2",
          quantity: 0
          }
        ]

    ProductInCart:
      type: object
      properties:
        _id:
          type: string
          description: ID del producto, autogenerado por Mongo
        quantity:
          type: integer
          description: cantidad de unidades del producto

    Ticket:
      type: object
      properties:
        _id:
          type: string
          description: ID del ticket de compra en la base de datos, autogenerado por Mongo
        purchase_datetime:
          type: string
          description: fecha de emisión del ticket de compra
        amount:
          type: number
          description: precio total de la compra realizada
        purchaser:
          type: string
          description: username del comprador
        code:
          type: string
          description: código del ticket emitido, generado por el método purchaseCart
        purchasedProducts:
          type: array
          items:
            type: object
            properties:
              productId: 
                type: string
                description: ID del producto comprado, autogenerado por Mongo
              quantity: 
                type: integer
                description: cantidad de unidades compradas del producto
              name: 
                type: string
                description: nombre (title) del producto comprado
          description: array de productos con stock suficiente y que fueron comprados
        pendingStockProducts:
          type: array
          items:
            type: object
            properties:
              productId: 
                type: string
                description: ID del producto sin stock, autogenerado por Mongo
              name: 
                type: string
                description: nombre (title) del producto no comprado por falta de stock
          description: array de productos sin stock suficiente y que no fueron comprados

    Success:
      type: object
      properties:
        message:
          type: string

    Error:
      type: object
      properties:
        error:
          type: string

  requestBodies:
    CartUpdate:
      type: object
      properties:
        _id:
          type: string
          description: id del cart, autogenerado por Mongo
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductInCart'
          description: array con el ID y cantidad de los productos agregados al cart
      example:
        _id: "6684270efca4696c3dc69275"
        products: [
          {
          _id: "661945da63af7211c9f442d2",
          quantity: 0
          }
        ]

    ProductAdd:
      type: object
      properties:
        quantity:
          type: integer

    ProductUpdateQuantity:
      type: object
      properties:
        quantity:
          type: integer

securitySchemes:
  CookieAuth:
    type: apiKey
    in: cookie
    name: connect.sid
